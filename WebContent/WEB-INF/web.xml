<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                      http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
  version="3.1"
  metadata-complete="true">


	<!--配置org.springframework.web.filter.HiddenHttpMethodFilter:可以把post请求转化为delete和put请求。  -->
	<filter>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- 配置DiapatcherServlet -->
	<servlet>
<!-- 		<servlet-name>testForREST-405</servlet-name>
		<servlet-class>classpath:com/atguigu/springmvc/servlet/ServletOverride.java</servlet-class> -->
		<servlet-name>springDispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet
		</servlet-class>
		<!-- 配置DiapatcherServlet的初始化参数：配置SpringMVC配置文件的位置和名称   classpath:  目录对应的是src目录下-->
<!-- 		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:springmvc.xml</param-value>
		</init-param> -->
		<!-- 实际上也可以不通过contextConfigLocation来配置SpringMVC的配置文件，而使用默认的，这样就需要将上面的<init-param>注释掉 
			 然后再WEB-INF目录下建立 名为 <servlet-name>-servlet.xml的文件，这里就是 springDispatcherServlet-servlet.xml
			 当然 <servlet-name> 可以随便定义，但是 <servlet-name> 要和<servlet-mapping>中的<servlet-name>对应上
		-->
		<!-- 但是一般情况下我们都会自己配置配置文件的目录和名称，所以一般会用第一种方式而不是第二种，并且会如下配置： -->
	<init-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:resource/config/DispatcherServlet-servlet.xml</param-value>
	</init-param>
		<!-- 启动的时候就加载 -->
		<load-on-startup>1</load-on-startup>
	</servlet>

	<!-- Map all requests to the DispatcherServlet for handling -->
	<servlet-mapping>
		<servlet-name>springDispatcherServlet</servlet-name>
		<!-- 配置成/是表示可以应答所有请求“当然也可以配置成其他的” -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- <welcome-file-list> <welcome-file>index.jsp</welcome-file> </welcome-file-list> -->
</web-app>